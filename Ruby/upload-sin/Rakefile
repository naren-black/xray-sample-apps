namespace :setup do

  desc "Creating example DynamoDB table"
  task :createDbTable do
    require 'aws-sdk-dynamodb'
    ddb = Aws::DynamoDB::Client.new({region: 'us-east-1'})
    nn = ddb.list_tables
    unless nn.include?(ENV['TABLE_NAME'])
      params = {
        table_name: ENV['TABLE_NAME'],
        key_schema: [
          {
            attribute_name: 'Email',
            key_type: 'HASH'
          }
        ],
        attribute_definitions: [
          {
            attribute_name: 'Email',
            attribute_type: 'S'
          }
        ],
        provisioned_throughput: {
          read_capacity_units: 5,
          write_capacity_units: 5
        }
      }
      begin
        res = ddb.create_table(params)
        puts "Created the table: #{res.table_description.table_name}...starting the server"
      rescue Aws::DynamoDB::Errors::ServiceError => error
        puts 'Unable to create table:'
        puts error.message
      end
    else
      puts "The table by name #{ENV['TABLE_NAME']} already exists...starting the server"
    end
  end

  desc "Run the rackup command"
  task :rackUpRun => :createDbTable do
    %x(bundle exec rackup -o 0.0.0.0 -p 9292)
  end

end
